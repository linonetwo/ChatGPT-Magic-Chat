{"tiddlers":{"$:/plugins/bimlas/kin-filter/README/concept.svg":{"title":"$:/plugins/bimlas/kin-filter/README/concept.svg","text":"<svg xmlns=\"http://www.w3.org/2000/svg\" color-interpolation=\"auto\" height=\"492\" width=\"576\" stroke-linecap=\"square\" stroke=\"#000000\" font-family=\"Dialog\" font-size=\"12\" stroke-miterlimit=\"10\"><style><![CDATA[.C{stroke:none}.E{stroke-miterlimit:1.45000005}.F{fill:none}.I{stroke-linecap:butt}.G{fill:#f1c122}.L{font-size:26.667px}.M{fill:#4f4f4f}.D{fill:#d84100}.H{fill:#006eff}]]></style><defs><clipPath id=\"A\"><path d=\"M-15-15h630v745H-15z\"/></clipPath></defs><g clip-path=\"url(#A)\" shape-rendering=\"geometricPrecision\" text-rendering=\"geometricPrecision\"><rect class=\"C D\" x=\"15.917\" height=\"40\" rx=\"4\" width=\"40\" y=\"161.955\"/><rect class=\"E F\" x=\"15.917\" height=\"40\" rx=\"4\" width=\"40\" y=\"161.955\"/><rect class=\"C D\" height=\"40\" rx=\"4\" width=\"80\" y=\"191.955\" x=\"95.917\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"80\" y=\"191.955\" x=\"95.917\"/><rect class=\"C D\" height=\"40\" rx=\"4\" width=\"40\" y=\"191.526\" x=\"204.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"191.526\" x=\"204.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"371.526\" x=\"284.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"371.526\" x=\"284.242\"/><rect class=\"C\" height=\"40\" rx=\"4\" width=\"40\" y=\"251.526\" x=\"284.242\" fill=\"#008b00\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"251.526\" x=\"284.242\"/><rect class=\"C H\" height=\"40\" rx=\"4\" width=\"80\" y=\"281.526\" x=\"384.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"80\" y=\"281.526\" x=\"384.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"131.955\" x=\"95.917\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"131.955\" x=\"95.917\"/><rect class=\"C H\" height=\"40\" rx=\"4\" width=\"40\" y=\"221.526\" x=\"384.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"221.526\" x=\"384.242\"/><rect class=\"C H\" height=\"40\" rx=\"4\" width=\"40\" y=\"221.526\" x=\"504.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"221.526\" x=\"504.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"101.526\" x=\"284.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"101.526\" x=\"284.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"131.526\" x=\"384.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"131.526\" x=\"384.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"60\" y=\"71.526\" x=\"384.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"60\" y=\"71.526\" x=\"384.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"11.526\" x=\"284.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"11.526\" x=\"284.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"401.526\" x=\"384.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"401.526\" x=\"384.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"161.526\" x=\"504.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"161.526\" x=\"504.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"40\" y=\"101.526\" x=\"504.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"40\" y=\"101.526\" x=\"504.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"80\" y=\"341.526\" x=\"384.242\"/><rect class=\"E F\" height=\"40\" rx=\"4\" width=\"80\" y=\"341.526\" x=\"384.242\"/><rect class=\"C G\" height=\"40\" rx=\"4\" width=\"60\" y=\"11.526\" x=\"384.242\"/><g class=\"E F\"><rect height=\"40\" rx=\"4\" width=\"60\" y=\"11.526\" x=\"384.242\"/><g class=\"I\"><path d=\"M64.54 181.955h12.03v30h19.35\"/></g></g><path class=\"C\" d=\"M55.887 181.955l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M183.636 211.526h20.33\" stroke-width=\".731\"/><path class=\"C\" d=\"M175.897 211.525l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M252.69 211.526h12.03v180h19.984\"/><path class=\"C\" d=\"M244.212 211.526l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M252.69 211.526h12.03v60h19.984\"/><path class=\"C\" d=\"M324.25 271.526l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M332.703 271.526h32.018v30h20\"/><path d=\"M324.25 391.66l12-5-3 5 3 5z\" class=\"C\"/><path class=\"E F I\" d=\"M64.887 181.955H76.57v-30h19.4m236.723 119.57h32.018v-30h19.984m48.025.001h72.02\"/><path class=\"C\" d=\"M423.72 241.526l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M252.69 211.526h12.03v-90h19.984\"/><path class=\"C\" d=\"M323.728 121.526l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M332.703 121.526h32.018v30h19.984\"/><path class=\"E F I\" d=\"M332.703 121.526h32.018v-30h20m-132.03 120h12.03v-180h19.984\"/><path class=\"C\" d=\"M323.728 31.526l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M332.703 391.526h32.018v30h19.984m48.02-270h51.996v30h19.984\"/><path class=\"E F I\" d=\"M432.725 151.526h51.996v-30h19.984\"/><path class=\"C\" d=\"M423.725 151.526l12-5-3 5 3 5z\"/><path class=\"E F I\" d=\"M332.703 391.526h32.018v-30h20m-51.993-330h51.98\"/></g><g class=\"C\" letter-spacing=\"0\" word-spacing=\"0\" font-family=\"sans-serif\"><text class=\"L\" y=\"481.371\" x=\"259.32\" xml:space=\"preserve\"><tspan class=\"M\" y=\"481.371\" x=\"259.32\">DEPTH</tspan></text><g font-size=\"40\"><text y=\"481.371\" x=\"395.524\" xml:space=\"preserve\"><tspan class=\"L M\" y=\"481.371\" x=\"395.524\">1</tspan></text><text y=\"481.547\" x=\"516.117\" xml:space=\"preserve\"><tspan class=\"L M\" y=\"481.547\" x=\"516.117\">2</tspan></text><text xml:space=\"preserve\" x=\"215.524\" y=\"481.371\"><tspan class=\"L M\" x=\"215.524\" y=\"481.371\">1</tspan></text><text xml:space=\"preserve\" x=\"107.792\" y=\"481.547\"><tspan class=\"L M\" x=\"107.792\" y=\"481.547\">2</tspan></text><text y=\"481.358\" x=\"27.486\" xml:space=\"preserve\"><tspan class=\"L M\" y=\"481.358\" x=\"27.486\">3</tspan></text><text y=\"325.27\" x=\"268.643\" xml:space=\"preserve\"><tspan class=\"L\" y=\"325.27\" x=\"268.643\" fill=\"#008b00\">BASE</tspan></text><text xml:space=\"preserve\" x=\"506.384\" y=\"325.27\"><tspan class=\"L H\" x=\"506.384\" y=\"325.27\">TO</tspan></text><text y=\"325.27\" x=\"96.958\" xml:space=\"preserve\"><tspan class=\"L D\" y=\"325.27\" x=\"96.958\">FROM</tspan></text></g></g></svg>","type":"image/svg+xml","tags":"picture"},"A":{"title":"A","tags":"kin-example-top"},"B":{"title":"B","tags":"A"},"C":{"title":"C","tags":"B","list":"D"},"D":{"title":"D","tags":"C","list":"E"},"E":{"title":"E","tags":"C","list":"G"},"F":{"title":"F","tags":"B"},"G":{"title":"G","tags":"F"},"H":{"title":"H","tags":"F"},"$:/plugins/bimlas/kin-filter/README/examples":{"title":"$:/plugins/bimlas/kin-filter/README/examples","type":"text/vnd.tiddlywiki","text":"\\define item-class(highlightfilter) <$list filter=\"[[kin-example-top]kin::to[]subfilter<__highlightfilter__>is[current]first[]]\">highlighted-toc-item</$list>\n\n\\define kin-example-with-toc(n,eg,ie)\n  <div class=\"doc-example\">\n    `$eg$`\n    <dd>&rarr; $ie$</dd>\n    <$list filter=\"[title<.state-prefix>addsuffix{!!title}addsuffix[/]addsuffix[$n$]]\" variable=\".state\">\n      <$reveal state=<<.state>> type=\"nomatch\" text=\"show\">\n        <dl>\n          <dd><$button set=<<.state>> setTo=\"show\">Try it</$button></dd>\n        </dl>\n      </$reveal>\n      <$reveal state=<<.state>> type=\"match\" text=\"show\">\n        <dl>\n          <dd><$button set=<<.state>> setTo=\"\">Hide</$button></dd>\n        </dl>\n        <blockquote class=\"doc-example-result\">\n          <ul><$list filter=\"[[kin-example-top]kin::to[]subfilter<__eg__>sort[]]\" emptyMessage=\"(empty)\">\n            <li><$link><$view field=\"title\"/></$link></li>\n          </$list></ul>\n          Results highlighted in the tree:\n\n          <<kin-toc \"$eg$\">>\n        </blockquote>\n      </$reveal>\n    </$list>\n  </div>\n\\end\n\n\\define each-level(highlightfilter)\n  <li>\n    <$wikify name=\"transcluded-item-class\" text=\"\"\"<$macrocall $name=\"item-class\" highlightfilter=<<__highlightfilter__>>/>\"\"\">\n      <$link class=<<transcluded-item-class>> ><<currentTiddler>></$link>\n    </$wikify>\n    <ul>\n      <$list filter=\"[[kin-example-top]kin::to[]tag<currentTiddler>]\">\n        <$macrocall $name=\"each-level\" highlightfilter=<<__highlightfilter__>>/>\n      </$list>\n    </ul>\n  </li>\n\\end\n\n\\define kin-toc(highlightfilter)\n  <$tiddler tiddler=\"kin-example-top\">\n    <ul>\n      <$macrocall $name=\"each-level\" highlightfilter=<<__highlightfilter__>>/>\n    </ul>\n  </$tiddler>\n\\end\n\n<style>\n  .highlighted-toc-item {\n    color: red !important;\n  }\n</style>\n\nExample tree (to really understand, look at the tiddlers):\n\n<<kin-toc \"!is[current]\">>\n\n''The tree'' below the examples only helps in understanding the filter, it ''is not part of the output''.\n\n''Feel free to edit [[this tiddler|$:/plugins/bimlas/kin-filter/README/examples]] to test your own filter expressions as well!'' If you want to undo the changes you made, just delete the tiddler, it will restore itself to its initial state.\n\n<<kin-example-with-toc 1 \"[kin[C]]\" \"input titles which are family members of the parameter title\">>\n<<kin-example-with-toc 2 \"[kin[C]kin[F]]\" \"common family members of each of the specified titles (intersection)\">>\n<<kin-example-with-toc 3 \"[kin[C]!kin[F]]\" \"difference of families of the specified titles (complement)\">>\n<<kin-example-with-toc 4 \"[[C]] [[F]] +[kin[]]\" \"collected titles which are family members of any of the input tiddlers (union)\">>\n<<kin-example-with-toc 5 \"[kin::to[B]]\" \"successors of the given tiddler\">>\n<<kin-example-with-toc 6 \"[kin::from[E]kin::to[B]]\" \"subset of the family tree\">>\n<<kin-example-with-toc 7 \"[kin::from:2[E]]\" \"ancestors of the given tiddler until the given depth\">>\n<<kin-example-with-toc 8 \"[kin:tags:from[G]]\" \"ancestors of tiddler based on `tags` field (`tags` points to parents)\">>\n<<kin-example-with-toc 9 \"[kin:list:to[G]]\" \"ancestors of tiddler based on `list` field (`list` point to children)\">>\n"},"$:/plugins/bimlas/kin-filter/README/syntax":{"title":"$:/plugins/bimlas/kin-filter/README/syntax","type":"text/vnd.tiddlywiki","text":"! Kin filter operator\n\n* https://gitlab.com/bimlas/tw5-kin-filter (official repository)\n* https://github.com/bimlas/tw5-kin-filter (mirror, please star if you like it)\n\nThe purpose of the ''kin'' operator with examples:\n\n* Finds related tags, related tiddlers in any depth\n* Finds out where base tiddler originates and what other elements originate from it\n* Finds the ancestors and successors of a family member\n* Finds the \"leaves\" of the branch of the base tiddler in a tree-like structure (where the base tiddler is a leaf)\n* Finds the super- and subsets / groups of a mathematical set (where the base tiddler is a set)\n\n[img[$:/plugins/bimlas/kin-filter/README/concept.svg]]\n\n|''input''|a [[selection of titles|https://tiddlywiki.com/#Title%20Selection]]|\n|''suffix''|the ''kin'' operator uses a rich suffix, see below for details|\n|''parameter''|''B'' base tiddler title or nothing|\n|''output''|''with parameter B''<br>&raquo; those input titles which are ''kin with B'' <br>''without B''<br>&raquo; ''all'' tiddler titles which are ''kin with input titles'' (treat input titles as base tiddlers)|\n|''`!` output''|''with parameter B''<br>&raquo; those input titles which are ''//NOT// kin with B''<br>''without parameter B''<br>&raquo; ignored|\n\nThe ''kin'' operator uses an extended syntax that permits multiple fields and flags to be passed:\n\n```\n[kin:<field>:<direction>:<depth>[<operand>]]\n```\n\n* ''field'': name of the [[field|https://tiddlywiki.com/#TiddlerFields]] which connecting tiddlers (assumed to be a [[title list|https://tiddlywiki.com/#Title%20List]], defaulting to `tags`)\n* ''direction'':  collect the tiddler titles in this direction relative to the base tiddler\n** ''from'': collect kins of base tiddler pointing from it (including the base tiddler title itself)\n** ''to'': collect kins of base tiddler pointing to it (including the base tiddler title itself)\n** ''with'': (the default) union of the aboves\n* ''depth'': maximum depth of the collected labels in the tree structure relative to the base tiddler (a positive number, not limited by default)\n* ''operand'': filter operand, the base tiddler\n\n''kin'' is a [[modifier|https://tiddlywiki.com/#Selection%20Constructors]], but without ''B'' parameter is a [[constructor|https://tiddlywiki.com/#Selection%20Constructors]].\n\n!! Installation instructions\n\nTo add the plugin to your own ~TiddlyWiki5, just drag this link to the browser window:\n\n$:/plugins/bimlas/kin-filter\n\nFor other installation options see the repositories above.\n\n//Select the next tab to continue.//\n"},"$:/plugins/bimlas/kin-filter/kin.js":{"title":"$:/plugins/bimlas/kin-filter/kin.js","text":"/*\\\ntitle: $:/plugins/bimlas/kin-filter/kin.js\ntype: application/javascript\nmodule-type: filteroperator\n\nFinds out where a tiddler originates from and what other tiddlers originate from it\n\n\\*/\n(function() {\n\n\t/*jslint node: true, browser: true */\n\t/*global $tw: true */\n\t\"use strict\";\n\n\tfunction collectTitlesRecursively(baseTiddler,baseTitle,options) {\n\t\tvar cacheName = \"kin-filter-\" + baseTitle + \"-\" + options.fieldName + \"-\",\n\t\t\ttitlesPointingFromBase = {},\n\t\t\ttitlesPointingToBase = {},\n\t\t\tresultsFrom = [],\n\t\t\tresultsTo = [];\n\n\t\t/* Copy of findListingsOfTiddler, but it's searching in shadows as well. */\n\t\tfunction findListingsOfTiddler(targetTitle,fieldName) {\n\t\t\tfieldName = fieldName || \"list\";\n\t\t\tvar titles = [];\n\t\t\toptions.wiki.eachTiddlerPlusShadows(function(tiddler,title) {\n\t\t\t\tvar list = $tw.utils.parseStringArray(tiddler.fields[fieldName]);\n\t\t\t\tif(list && list.indexOf(targetTitle) !== -1) {\n\t\t\t\t\ttitles.push(title);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn titles;\n\t\t}\n\n\t\tfunction addToResultsIfNotFoundAlready(alreadyFound,title,depth) {\n\t\t\tif(title in alreadyFound) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\talreadyFound[title] = depth;\n\t\t\treturn true\n\t\t}\n\n\t\tfunction collectTitlesPointingFrom(tiddler,title,currentDepth) {\n\t\t\tif(addToResultsIfNotFoundAlready(titlesPointingFromBase,title,currentDepth)) {\n\t\t\t\tcurrentDepth += 1;\n\t\t\t\tif(tiddler) {\n\t\t\t\t\t$tw.utils.each(tiddler.getFieldList(options.fieldName),function(targetTitle) {\n\t\t\t\t\t\tcollectTitlesPointingFrom(options.wiki.getTiddler(targetTitle),targetTitle,currentDepth);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction collectTitlesPointingTo(title,currentDepth) {\n\t\t\tif(addToResultsIfNotFoundAlready(titlesPointingToBase,title,currentDepth)) {\n\t\t\t\tcurrentDepth += 1;\n\t\t\t\t$tw.utils.each(findListingsOfTiddler(title,options.fieldName),function(targetTitle) {\n\t\t\t\t\tcollectTitlesPointingTo(targetTitle,currentDepth);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction getObjectKeysByExpression(object,callback) {\n\t\t\tvar key,\n\t\t\t\tresults = [];\n\t\t\tfor (key in object) {\n\t\t\t\tif (object.hasOwnProperty(key) && callback(object[key])) {\n\t\t\t\t\tresults.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n\n\t\tfunction getResultsInGivenDepth(cachedData) {\n\t\t\tif(options.depth) {\n\t\t\t\treturn getObjectKeysByExpression(cachedData,function(value) {\n\t\t\t\t\treturn value <= options.depth;\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\treturn Object.keys(cachedData);\n\t\t\t}\n\t\t}\n\n\t\tif((options.direction === \"from\") || (options.direction === \"with\")) {\n\t\t\tresultsFrom = $tw.wiki.getGlobalCache(cacheName + \"from\",function() {\n\t\t\t\tcollectTitlesPointingFrom(baseTiddler,baseTitle,0);\n\t\t\t\treturn titlesPointingFromBase;\n\t\t\t});\n\t\t\tresultsFrom = getResultsInGivenDepth(resultsFrom);\n\t\t}\n\t\tif((options.direction === \"to\") || (options.direction === \"with\")) {\n\t\t\tresultsTo = $tw.wiki.getGlobalCache(cacheName + \"to\",function() {\n\t\t\t\tcollectTitlesPointingTo(baseTitle,0);\n\t\t\t\treturn titlesPointingToBase;\n\t\t\t});\n\t\t\tresultsTo = getResultsInGivenDepth(resultsTo);\n\t\t}\n\t\treturn $tw.utils.pushTop(resultsFrom,resultsTo);\n\t}\n\n\t/*\n\tExport our filter function\n\t*/\n\texports.kin = function(source,operator,options) {\n\t\tvar results = [],\n\t\t\tneedsExclusion = operator.prefix === \"!\",\n\t\t\tsuffixes = operator.suffixes || [],\n\t\t\tfilterOptions = {\n\t\t\t\twiki: options.wiki,\n\t\t\t\tfieldName: ((suffixes[0] || [])[0] || \"tags\").toLowerCase(),\n\t\t\t\tdirection: ((suffixes[1] || [])[0] || \"with\").toLowerCase(),\n\t\t\t\tdepth: Number((suffixes[2] || [])[0]),\n\t\t\t};\n\n\t\tif((operator.operand === \"\") && (needsExclusion)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif(operator.operand !== \"\") {\n\t\t\tvar baseTitle = operator.operand,\n\t\t\t\tbaseTiddler = options.wiki.getTiddler(baseTitle),\n\t\t\t\tfoundTitles = collectTitlesRecursively(baseTiddler,baseTitle,filterOptions);\n\n\t\t\tsource(function(tiddler,title) {\n\t\t\t\tif(needsExclusion === (foundTitles.indexOf(title) === -1)) {\n\t\t\t\t\tresults.push(title);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tsource(function(tiddler,title) {\n\t\t\t\tresults = $tw.utils.pushTop(results,collectTitlesRecursively(tiddler,title,filterOptions));\n\t\t\t});\n\t\t}\n\n\t\treturn results;\n\t}\n})();\n","type":"application/javascript","module-type":"filteroperator"}}}