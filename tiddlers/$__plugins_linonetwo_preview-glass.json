{"tiddlers":{"$:/plugins/linonetwo/preview-glass/config":{"title":"$:/plugins/linonetwo/preview-glass/config","text":"\\define default()\n<dt>$(defaults)$$(option)$</dt>\n<dd>\n//{{$:/plugins/linonetwo/preview-glass/lingo/$(option)$}}<$list\nfilter=\"[[$(option)$]prefix[template]]\">\n{{$(defaults)$$(option)$}}</$list>://<br>\n<$edit-text tag=input tiddler=\"$(defaults)$$(option)$\"/>\n</dd>\n\\end\n\n<dl class=\"preview-defaults\">\n<$vars defaults=\"$:/plugins/linonetwo/preview-glass/defaults/\">\n<$list filter=\"[all[tiddlers+shadows]removeprefix<defaults>sort[title]]\" variable=\"option\">\n<<default>>\n</$list>\n</$vars>\n</dl>\n<style>.preview-defaults input {width:90%;}</style>\n"},"$:/plugins/linonetwo/preview-glass/lingo/keys":{"title":"$:/plugins/linonetwo/preview-glass/lingo/keys","text":"modifier keys to trigger popup directly on-hover (ctrl, alt+shift, meta, etc...)"},"$:/plugins/linonetwo/preview-glass/defaults/keys":{"title":"$:/plugins/linonetwo/preview-glass/defaults/keys","text":"CTRL"},"$:/plugins/linonetwo/preview-glass/lingo/delay":{"title":"$:/plugins/linonetwo/preview-glass/lingo/delay","text":"delay popup for this many milliseconds"},"$:/plugins/linonetwo/preview-glass/defaults/delay":{"title":"$:/plugins/linonetwo/preview-glass/defaults/delay","text":"150"},"$:/plugins/linonetwo/preview-glass/lingo/class":{"title":"$:/plugins/linonetwo/preview-glass/lingo/class","text":"css classes applied to the popup"},"$:/plugins/linonetwo/preview-glass/defaults/class":{"title":"$:/plugins/linonetwo/preview-glass/defaults/class","text":"hover-popup-preview-container"},"$:/plugins/linonetwo/preview-glass/lingo/not":{"title":"$:/plugins/linonetwo/preview-glass/lingo/not","text":"no preview for links inside elements with these classes"},"$:/plugins/linonetwo/preview-glass/defaults/not":{"title":"$:/plugins/linonetwo/preview-glass/defaults/not","text":"tc-drop-down tc-search-drop-down tc-sidebar-scrollable tc-topbar tc-tiddler-title"},"$:/plugins/linonetwo/preview-glass/lingo/exclude":{"title":"$:/plugins/linonetwo/preview-glass/lingo/exclude","text":"no preview for links to tiddlers matching this filter"},"$:/plugins/linonetwo/preview-glass/defaults/exclude":{"title":"$:/plugins/linonetwo/preview-glass/defaults/exclude","text":"[is[system]] [all[shadows]] [!has[text]]"},"$:/plugins/linonetwo/preview-glass/lingo/template":{"title":"$:/plugins/linonetwo/preview-glass/lingo/template","text":"the preview template"},"$:/plugins/linonetwo/preview-glass/defaults/template":{"title":"$:/plugins/linonetwo/preview-glass/defaults/template","text":"$:/plugins/linonetwo/preview-glass/template"},"$:/plugins/linonetwo/preview-glass/lingo/open":{"title":"$:/plugins/linonetwo/preview-glass/lingo/open","text":"view at ''<<WIKI>>''"},"$:/plugins/linonetwo/preview-glass/keyboard.js":{"title":"$:/plugins/linonetwo/preview-glass/keyboard.js","text":"/*\\\ntitle: $:/plugins/tobibeer/preview/keyboard.js\ntype: application/javascript\nmodule-type: utils\nFixes $:/core/modules/utils/dom/keyboard.js by providing an alternative.\nDo not use as an API, let's fix the core.\n@preserve\n\\*/\n(function(){\n\n  /*jslint node: true, browser: true */\n  /*global $tw: false */\n  \"use strict\";\n  \n  var namedKeys = {\n    \"BACKSPACE\": 8,\n    \"TAB\": 9,\n    \"ENTER\": 13,\n    \"ESCAPE\": 27,\n    \"PAGEUP\": 33,\n    \"PAGEDOWN\": 34,\n    \"END\": 35,\n    \"HOME\": 36,\n    \"LEFT\":\t37,\n    \"UP\": 38,\n    \"RIGHT\": 39,\n    \"DOWN\": 40,\n    \"INSERT\": 45,\n    \"DELETE\": 46\n  };\n  \n  /*\n  Parses a key descriptor into the structure:\n  {\n    keyCode: numeric keycode\n    shiftKey: boolean\n    altKey: boolean\n    ctrlKey: boolean\n  }\n  Key descriptors have the following format:\n    ctrl+enter\n    ctrl+shift+alt+A\n  */\n  exports.parseKeyDescriptorTB = function(keyDescriptor) {\n    var neg,s,t,\n      components = keyDescriptor.toUpperCase().split(\"+\"),\n      info = {\n        keyCode: null,\n        shiftKey: false,\n        altKey: false,\n        ctrlKey: false\n      };\n    for(t=0; t<components.length; t++) {\n      neg = false;\n      s = components[t];\n      // Look for negation\n      if(s.substr(0,1) === \"!\") {\n        neg = true;\n        s = s.substr(1);\n      }\n      // Look for modifier keys\n      if(s === \"CTRL\") {\n        info.ctrlKey = neg ? null : true;\n      } else if(s === \"SHIFT\") {\n        info.shiftKey =  neg ? null : true;\n      } else if(s === \"ALT\") {\n        info.altKey =  neg ? null : true;\n      } else if(s === \"META\") {\n        info.metaKey =  neg ? null : true;\n      // Replace named keys with their code\n      } else if(namedKeys[s]) {\n        info.keyCode = namedKeys[s];\n      // Normal letter\n      } else {\n        info.keyCode = s.charCodeAt(0);\n      }\n    }\n    return info;\n  };\n  \n  exports.checkKeyDescriptorTB = function(event,keyInfo) {\n    var metaKeyStatus = !!keyInfo.metaKey; // Using a temporary variable to keep JSHint happy\n    return (keyInfo.keyCode === null || event.keyCode === keyInfo.keyCode) &&\n      (keyInfo.shiftKey === null ? !event.shiftKey : event.shiftKey === keyInfo.shiftKey) &&\n      (keyInfo.altKey === null ? !event.altKey : event.altKey === keyInfo.altKey) &&\n      (keyInfo.ctrlKey === null ? !event.ctrlKey : event.ctrlKey === keyInfo.ctrlKey) &&\n      (keyInfo.metaKey === null ? !event.metaKey : event.metaKey === metaKeyStatus);\n  };\n  \n  })();","type":"application/javascript","module-type":"utils","Fixes $":"/core/modules/utils/dom/keyboard.js by providing an alternative."},"$:/plugins/linonetwo/preview-glass/link.js":{"title":"$:/plugins/linonetwo/preview-glass/link.js","text":"/*\\\ntitle: $:/plugins/linonetwo/preview-glass/link.js\ntype: application/javascript\nmodule-type: startup\nEnhances the link widget for on-hover previews\n\nModified by LinOnetwo\n\n@preserve\n\\*/\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\n(function () {\n  var // Global flag to stop mouseover madness\n    block,\n    // Get core link widget\n    CoreLink = require('$:/core/modules/widgets/link.js').link,\n    // Store ref to render() and handleClickEvent()\n    renderCore = CoreLink.prototype.render,\n    clickCore = CoreLink.prototype.handleClickEvent;\n\n  // Hijack core link widget render()\n  CoreLink.prototype.render = function () {\n    // Run core handler\n    renderCore.apply(this, arguments);\n    var self = this,\n      wiki = this.wiki,\n      // The link node\n      el = this.domNodes[0],\n      // Target tiddler\n      to = wiki.getTiddler(self.to),\n      // Shortcut to defaults namespace\n      defaults = '$:/plugins/linonetwo/preview-glass/defaults/',\n      // Shortcut to preview namespace\n      preview = '$:/temp/tobibeer/preview-',\n      // Modifier keys to quick-show the popup w/o delay\n      keys = $tw.utils.parseKeyDescriptorTB(wiki.getTextReference(defaults + 'keys', '').toUpperCase()),\n      // Delay for popup rendering\n      delay = wiki.getTextReference(defaults + 'delay').toUpperCase(),\n      //Check if popup already open\n      getInfo = function (el) {\n        // Get current popup level\n        var info = $tw.popup.popupInfo(el),\n          // Get current popup level\n          level = info.popupLevel;\n        return wiki.getTextReference(preview + level) && wiki.getTextReference(preview + level + '-tiddler') === self.to\n          ? null\n          : info;\n      },\n      // Displays the preview popup\n      showPopup = function () {\n        var level,\n          // Get info (only if not open yet)\n          info = getInfo(el);\n        // Not open yet and not yet blocking mouseover madness?\n        if (info) {\n          // Get current popup level\n          level = info.popupLevel;\n          // Stop waiting for other popups to pop up\n          clearTimeout(self.previewTimeout);\n          // Quite all of outer level\n          $tw.popup.cancel(level);\n          // Level up\n          level++;\n          // Store reference to tiddler to be previewed for level\n          wiki.setText(preview + level + '-tiddler', 'text', null, self.to);\n          // Store the popup details if not already there\n          if ($tw.popup.findPopup(preview + level) === -1) {\n            // Show popup with timeout, to get past nextTick\n            setTimeout(function () {\n              // Core popup triggering\n              $tw.popup.triggerPopup({\n                // For this tiddler\n                domNode: el,\n                // The state for this level\n                title: preview + level,\n                wiki: wiki,\n              });\n              block = 0;\n            }, 50);\n          }\n        }\n      },\n      // A helper to determine whether or not to actually show the popup\n      show = function () {\n        var ex,\n          exclude,\n          // By default, show\n          doShow = 1,\n          // The css classes in which not to display previews for links\n          not = wiki.getTextReference(defaults + 'not', '');\n        // Got any?\n        if (not) {\n          // Split classes and loop\n          $tw.utils.each(not.split(' '), function (n) {\n            // This node\n            var node = el;\n            // Loop so long as parent-nodes and still displaying\n            while (node && doShow) {\n              // Node has exclude-class?\n              if ($tw.utils.hasClass(node, n)) {\n                // Ok, so we're not showing\n                doShow = 0;\n                // Stop iterating\n                return false;\n              }\n              // Next partent\n              node = node.parentNode;\n            }\n          });\n        }\n        // Not aborted yet?\n        if (doShow) {\n          // get exclude filter\n          exclude = wiki.getTextReference(defaults + 'exclude', '');\n          // Fetch excluded titles\n          ex = exclude ? wiki.filterTiddlers(exclude) : [];\n          // Title in excludes?\n          if (ex.indexOf(self.to) >= 0) {\n            // Then don't display\n            doShow = 0;\n          }\n        }\n        // Return what we got\n        return doShow;\n      };\n    // Turn delay to integer\n    delay = delay !== undefined ? parseInt(delay) : null;\n    // Not a number?\n    if (delay !== null && isNaN(delay)) {\n      // No delay\n      delay = 0;\n    }\n    // Target tiddler exists?\n    if (to) {\n      // Add handle class\n      $tw.utils.addClass(el, 'tc-popup-handle');\n      // Add absolute positioning class\n      $tw.utils.addClass(el, 'tc-popup-absolute');\n      // Loop new event handlers\n      ['mouseover', 'mouseout'].forEach(function (e) {\n        // Create event listener\n        el.addEventListener(e, function (event) {\n          // Ref to event\n          var ev = event || window.event;\n          // On mouseover\n          if (e === 'mouseover') {\n            // Actually showing anything?\n            if (show()) {\n              // No keycode?\n              if (!ev.keyCode) {\n                // Set to 0, for whatever reason the core expects one\n                ev.keyCode = 0;\n              }\n              // Modifier keys say we show directly?\n              if ($tw.utils.checkKeyDescriptorTB(ev, keys)) {\n                // Not yet blocking mousover madness?\n                if (!block) {\n                  // Block further firing of mouseover events\n                  block = 1;\n                  // Then show\n                  showPopup();\n                }\n                // Modifiers don't match but we got a delay?\n              } else if (delay !== null) {\n                // No more blocking of mouseover events\n                block = 0;\n                // Set timeout and wait to show popup\n                self.previewTimeout = setTimeout(showPopup, delay);\n              }\n            }\n            // Mouseout\n          } else {\n            // No more blocking of mouseover events\n            block = 0;\n            // No more waiting for the popup\n            clearTimeout(self.previewTimeout);\n            // close popup\n\t\t\t\t\t\t // if next object to move mouse to is not a popup\n            if(!event.relatedTarget || !event.relatedTarget.classList.contains('tc-preview-tiddler')) {\n              // then close popup\n            \t$tw.popup.cancel(Math.max(0, getInfo(el).popupLevel));\n\t\t\t\t\t\t}\n          }\n        });\n      });\n    }\n  };\n\n  // Hijack click handler\n  CoreLink.prototype.handleClickEvent = function () {\n    // Run core handler\n    clickCore.apply(this, arguments);\n    // Abort popup delay timeout\n    clearTimeout(this.previewTimeout);\n    // Close popups\n    $tw.popup.cancel(Math.max(0, $tw.popup.popupInfo(this.domNodes[0]).popupLevel));\n  };\n})();","type":"application/javascript","module-type":"startup","created":"20200530032342272","modified":"20200530033801090"},"$:/plugins/linonetwo/preview-glass/motivation":{"title":"$:/plugins/linonetwo/preview-glass/motivation","created":"20200413015135813","modified":"20200530032358118","type":"text/vnd.tiddlywiki","text":"[[Preview|http://tobibeer.github.io/tw5-plugins/#preview]] 鼠标悬浮链接查看预览，只展示内部链接，因为外部链接可能也是个 TiddlyWiki 而非常硕大。\n\n我在展示时使用了自己的模板，不展示具体内容，只展示 tag 和相关笔记，不然内容实在是太多了。真要看具体内容直接点击链接看不就好了。\n\n[[我还修改了原版的 JS|https://github.com/tobibeer/tw5-preview/issues/1]] ，从而让预览窗口在鼠标移开链接后就自动关闭，以免影响操作。\n\n```js\n            // Mouseout\n          } else {\n            // No more blocking of mouseover events\n            block = 0;\n            // No more waiting for the popup\n\t\t\t\t\t\tconst popupID = Math.max(0, getInfo(el).popupLevel);\n            clearTimeout(self.previewTimeout);\n            // close popup\n            $tw.popup.cancel(popupID);\n          }\n```\n"},"$:/plugins/linonetwo/preview-glass/popups":{"title":"$:/plugins/linonetwo/preview-glass/popups","tags":"$:/tags/PageTemplate","text":"\\define state(num)\n$:/temp/tobibeer/preview-$num$\n\\end\n\n\\define classes(num)\ntc-popup appear appear-block appear-reveal tc-preview-tiddler tc-preview-tiddler-$num$ $(default-classes)$\n\\end\n\n\\define level(num)\n<$reveal tag=\"div\" type=\"popup\" state=<<state $num$>> class=<<classes $num$>>>\n<$tiddler tiddler={{$:/temp/tobibeer/preview-$num$-tiddler}}>\n<$transclude tiddler={{$:/plugins/linonetwo/preview-glass/defaults/template}} mode=\"block\"/>\n</$tiddler>\n</$reveal>\n\\end\n\n<$vars default-classes={{$:/plugins/linonetwo/preview-glass/defaults/class}}>\n<$list filter=\"1 2 3 4 5 6 7 8 9\">\n<$macrocall $name=\"level\" num={{!!title}}/>\n</$list>\n</$vars>\n"},"$:/plugins/linonetwo/preview-glass/preview-template.css":{"title":"$:/plugins/linonetwo/preview-glass/preview-template.css","text":".hover-popup-preview-container {\n\tbackdrop-filter: blur(10px);\n\tbackground: rgba(255, 255, 255, 0.3) !important;\n\ttransform: translateY(0px);\n}\n\n/**\n  Try added a triangle to it, but it seems work not so good with the backdrop-filter glass effect\n*/\n\n/**\n.hover-popup-preview-container::before {\n\tcontent: \"\";\n\twidth: 0px;\n\theight: 0px;\n\tposition: absolute;\n\tborder-left: 10px solid transparent;\n\tborder-right: 10px solid transparent;\n\tborder-top: 10px solid transparent;\n\tborder-bottom: 10px solid rgba(255, 255, 255, 0.5);\n\tright: 95%;\n\ttop: -20.5px;\n}\n*/","created":"20200415090452849","modified":"20200530033507747","tags":"$:/tags/Stylesheet","type":"text/css"},"$:/plugins/linonetwo/preview-glass/readme":{"title":"$:/plugins/linonetwo/preview-glass/readme","created":"20200414135748497","modified":"20200602062349232","type":"text/vnd.tiddlywiki","text":"!! About\n\nModification to the [[tobibeer/preview plugin|https://tobibeer.github.io/tw5-plugins/#preview]], make it auto close if mouse move out of the link (as discussed in the [[issue#1|https://github.com/tobibeer/tw5-preview/issues/1]]), and add custom style, make it like a glass.\n\n!! Prerequisit\n\nThis plugin has three dependencies:\n\n# [[tobibeer/appear|http://tobibeer.github.io/tw5-plugins/#appear]] to make popup work\n# [[$:/plugins/ooktech/dynamic-tables]] to make fields table in the popup template\n# [[$:/plugins/linonetwo/inverse-link-and-folder]] to make bi-directional links in the popup template\n\n!! This Plugin is a Forked version\n\nOriginal source is located in [[https://github.com/tobibeer/tw5-preview]], which has version 0.5.6 at several years ago, so maybe this plugin can be 0.5.7?\n\nSee [[document of tobibeer/preview|https://tobibeer.github.io/tw5-plugins/#preview]] to get more usage and explaination.\n\nThis plugin provides some new template, which depends on some other plugin to work, see plugin.info for detail.\n\n- [[$:/plugins/linonetwo/preview-glass/preview-template.css]] new styles\n- [[$:/plugins/linonetwo/preview-glass/template]] new template\n\nAnd some overrides:\n\n- [[$:/plugins/tobibeer/preview/link.js]] is override by this plugin, by providing a new js with same title\n- [[$:/plugins/tobibeer/preview/defaults/not]] set some link to not have pop up.\n- [[$:/plugins/tobibeer/preview/defaults/class]] and [[$:/plugins/tobibeer/preview/defaults/template]] override the template and style settings\n- [[$:/plugins/tobibeer/preview/defaults/delay]] change the popup delay\n"},"$:/plugins/linonetwo/preview-glass/template":{"title":"$:/plugins/linonetwo/preview-glass/template","created":"20200413014112868","modified":"20200415101145651","type":"text/vnd.tiddlywiki","text":"{{||$:/plugins/linonetwo/inverse-link-and-folder/infobar}}\n\n<<ColumnTable \"[<currentTiddler>]\" \"modified created\">>"}}}